version: '3.9'

services:
  db:
    image: postgres:14.5
    container_name: blocklog_db
    ports:
      - "5432:5432"
    volumes:
      - data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=blocklog-db
    restart: unless-stopped

  db-test:
    image: postgres:14.5
    container_name: blocklog_test_db
    ports:
      - "5433:5432"
    volumes:
      - test_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=blocklog-db
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:6.21
    container_name: blocklog_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    logging:
      driver: "none"
    volumes:
       - pgadmin:/root/.pgadmin
       - ./docker/pgadmin/local-db-servers.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    restart: unless-stopped

  kafka:
    image: obsidiandynamics/kafka
    container_name: blocklog_kafka
    ports:
      - '2181:2181'
      - '9092:9092'
    environment:
      KAFKA_LISTENERS: 'INTERNAL://:29092,EXTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: '6000'
      KAFKA_RESTART_ATTEMPTS: '10'
      KAFKA_RESTART_DELAY: '5'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#      KAFKA_CREATE_TOPICS: "index-events:1:1"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: '0'
    restart: unless-stopped

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: blocklog_kafdrop
    ports:
      - '9000:9000'
    environment:
      KAFKA_BROKERCONNECT: 'kafka:29092'
      JVM_OPTS: '-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify'
    depends_on:
      - 'kafka'
    restart: unless-stopped

volumes:
  data:
    name: blocklog_data
  test_data:
    name: blocklog_test_data
  pgadmin:
    name: blocklog_pgadmin
