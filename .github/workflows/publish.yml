name: Create and publish a Docker image

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Detect changes
        uses: dorny/paths-filter@v2.11.1
        id: changes
        with:
          filters: |
            server:
              - 'server/**'
            client:
              - 'client/**'
            osmosis-indexer:
              - 'indexers/osmosis/**'

      - name: Extract metadata (tags, labels) for server image
        id: meta-server
        uses: docker/metadata-action@v4.3.0
        if: steps.changes.outputs.server == 'true'
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-server

      - name: Build and push server Docker image
        uses: docker/build-push-action@v4.0.0
        if: steps.changes.outputs.server == 'true'
        with:
          context: server/
          push: true
          tags: ${{ steps.meta-server.outputs.tags }}
          labels: ${{ steps.meta-server.outputs.labels }}

      - name: Extract metadata (tags, labels) for client image
        id: meta-client
        uses: docker/metadata-action@v4.3.0
        if: steps.changes.outputs.client == 'true'
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-client

      - name: Build and push client Docker image
        uses: docker/build-push-action@v4.0.0
        if: steps.changes.outputs.client == 'true'
        with:
          file: client.Dockerfile
          push: true
          tags: ${{ steps.meta-client.outputs.tags }}
          labels: ${{ steps.meta-client.outputs.labels }}
          build-args: GRPC_WEB_ENDPOINT_URL=https://star-scope.decrypto.online

      - name: Extract metadata (tags, labels) for indexer image
        id: meta-indexer
        uses: docker/metadata-action@v4.3.0
        if: steps.changes.outputs.osmosis-indexer == 'true'
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-osmosis-indexer

      - name: Build and push indexer Docker image
        uses: docker/build-push-action@v4.0.0
        if: steps.changes.outputs.osmosis-indexer == 'true'
        with:
          context: indexers/osmosis/
          push: true
          tags: ${{ steps.meta-indexer.outputs.tags }}
          labels: ${{ steps.meta-indexer.outputs.labels }}

      - name: Deploy to swarm
        uses: wshihadeh/docker-deployment-action@v2
        with:
          remote_docker_host: ubuntu@188.166.38.235
          ssh_private_key: ${{ secrets.SWARMY_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.SWARMY_SSH_PUBLIC_KEY }}
          deployment_mode: docker-swarm
          copy_stack_file: true
          deploy_path: /home/ubuntu
          stack_file_name: swarm-prod.yml
          keep_files: 5
          args: star-scope --with-registry-auth