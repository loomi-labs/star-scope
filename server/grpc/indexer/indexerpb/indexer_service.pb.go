// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: grpc/indexer/indexerpb/indexer_service.proto

package indexerpb

import (
	queryevent "github.com/loomi-labs/star-scope/queryevent"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexingChain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path                  string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	RpcUrl                string   `protobuf:"bytes,4,opt,name=rpc_url,json=rpcUrl,proto3" json:"rpc_url,omitempty"`
	IndexingHeight        uint64   `protobuf:"varint,5,opt,name=indexing_height,json=indexingHeight,proto3" json:"indexing_height,omitempty"`
	HandledMessageTypes   []string `protobuf:"bytes,6,rep,name=handled_message_types,json=handledMessageTypes,proto3" json:"handled_message_types,omitempty"`
	UnhandledMessageTypes []string `protobuf:"bytes,7,rep,name=unhandled_message_types,json=unhandledMessageTypes,proto3" json:"unhandled_message_types,omitempty"`
	HasCustomIndexer      bool     `protobuf:"varint,8,opt,name=has_custom_indexer,json=hasCustomIndexer,proto3" json:"has_custom_indexer,omitempty"`
}

func (x *IndexingChain) Reset() {
	*x = IndexingChain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexingChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexingChain) ProtoMessage() {}

func (x *IndexingChain) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexingChain.ProtoReflect.Descriptor instead.
func (*IndexingChain) Descriptor() ([]byte, []int) {
	return file_grpc_indexer_indexerpb_indexer_service_proto_rawDescGZIP(), []int{0}
}

func (x *IndexingChain) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IndexingChain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexingChain) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *IndexingChain) GetRpcUrl() string {
	if x != nil {
		return x.RpcUrl
	}
	return ""
}

func (x *IndexingChain) GetIndexingHeight() uint64 {
	if x != nil {
		return x.IndexingHeight
	}
	return 0
}

func (x *IndexingChain) GetHandledMessageTypes() []string {
	if x != nil {
		return x.HandledMessageTypes
	}
	return nil
}

func (x *IndexingChain) GetUnhandledMessageTypes() []string {
	if x != nil {
		return x.UnhandledMessageTypes
	}
	return nil
}

func (x *IndexingChain) GetHasCustomIndexer() bool {
	if x != nil {
		return x.HasCustomIndexer
	}
	return false
}

type GetIndexingChainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chains []*IndexingChain `protobuf:"bytes,1,rep,name=chains,proto3" json:"chains,omitempty"`
}

func (x *GetIndexingChainsResponse) Reset() {
	*x = GetIndexingChainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIndexingChainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndexingChainsResponse) ProtoMessage() {}

func (x *GetIndexingChainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndexingChainsResponse.ProtoReflect.Descriptor instead.
func (*GetIndexingChainsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_indexer_indexerpb_indexer_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetIndexingChainsResponse) GetChains() []*IndexingChain {
	if x != nil {
		return x.Chains
	}
	return nil
}

type UpdateIndexingChainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chains []*IndexingChain `protobuf:"bytes,1,rep,name=chains,proto3" json:"chains,omitempty"`
}

func (x *UpdateIndexingChainsRequest) Reset() {
	*x = UpdateIndexingChainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIndexingChainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIndexingChainsRequest) ProtoMessage() {}

func (x *UpdateIndexingChainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIndexingChainsRequest.ProtoReflect.Descriptor instead.
func (*UpdateIndexingChainsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_indexer_indexerpb_indexer_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateIndexingChainsRequest) GetChains() []*IndexingChain {
	if x != nil {
		return x.Chains
	}
	return nil
}

type HandleTxsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs [][]byte `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *HandleTxsRequest) Reset() {
	*x = HandleTxsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleTxsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleTxsRequest) ProtoMessage() {}

func (x *HandleTxsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleTxsRequest.ProtoReflect.Descriptor instead.
func (*HandleTxsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_indexer_indexerpb_indexer_service_proto_rawDescGZIP(), []int{3}
}

func (x *HandleTxsRequest) GetTxs() [][]byte {
	if x != nil {
		return x.Txs
	}
	return nil
}

type HandleTxsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoMessages         [][]byte `protobuf:"bytes,1,rep,name=proto_messages,json=protoMessages,proto3" json:"proto_messages,omitempty"`
	CountSkipped          int32    `protobuf:"varint,2,opt,name=count_skipped,json=countSkipped,proto3" json:"count_skipped,omitempty"`
	CountProcessed        int32    `protobuf:"varint,3,opt,name=count_processed,json=countProcessed,proto3" json:"count_processed,omitempty"`
	HandledMessageTypes   []string `protobuf:"bytes,4,rep,name=handled_message_types,json=handledMessageTypes,proto3" json:"handled_message_types,omitempty"`
	UnhandledMessageTypes []string `protobuf:"bytes,5,rep,name=unhandled_message_types,json=unhandledMessageTypes,proto3" json:"unhandled_message_types,omitempty"`
}

func (x *HandleTxsResponse) Reset() {
	*x = HandleTxsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleTxsResponse) ProtoMessage() {}

func (x *HandleTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleTxsResponse.ProtoReflect.Descriptor instead.
func (*HandleTxsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_indexer_indexerpb_indexer_service_proto_rawDescGZIP(), []int{4}
}

func (x *HandleTxsResponse) GetProtoMessages() [][]byte {
	if x != nil {
		return x.ProtoMessages
	}
	return nil
}

func (x *HandleTxsResponse) GetCountSkipped() int32 {
	if x != nil {
		return x.CountSkipped
	}
	return 0
}

func (x *HandleTxsResponse) GetCountProcessed() int32 {
	if x != nil {
		return x.CountProcessed
	}
	return 0
}

func (x *HandleTxsResponse) GetHandledMessageTypes() []string {
	if x != nil {
		return x.HandledMessageTypes
	}
	return nil
}

func (x *HandleTxsResponse) GetUnhandledMessageTypes() []string {
	if x != nil {
		return x.UnhandledMessageTypes
	}
	return nil
}

type GovernanceProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId uint64                    `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	Status     queryevent.ProposalStatus `protobuf:"varint,2,opt,name=status,proto3,enum=starscope.queryevent.ProposalStatus" json:"status,omitempty"`
}

func (x *GovernanceProposal) Reset() {
	*x = GovernanceProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GovernanceProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GovernanceProposal) ProtoMessage() {}

func (x *GovernanceProposal) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GovernanceProposal.ProtoReflect.Descriptor instead.
func (*GovernanceProposal) Descriptor() ([]byte, []int) {
	return file_grpc_indexer_indexerpb_indexer_service_proto_rawDescGZIP(), []int{5}
}

func (x *GovernanceProposal) GetProposalId() uint64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

func (x *GovernanceProposal) GetStatus() queryevent.ProposalStatus {
	if x != nil {
		return x.Status
	}
	return queryevent.ProposalStatus(0)
}

type ChainInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path      string                `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	RpcUrl    string                `protobuf:"bytes,4,opt,name=rpc_url,json=rpcUrl,proto3" json:"rpc_url,omitempty"`
	Proposals []*GovernanceProposal `protobuf:"bytes,5,rep,name=proposals,proto3" json:"proposals,omitempty"`
}

func (x *ChainInfo) Reset() {
	*x = ChainInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainInfo) ProtoMessage() {}

func (x *ChainInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainInfo.ProtoReflect.Descriptor instead.
func (*ChainInfo) Descriptor() ([]byte, []int) {
	return file_grpc_indexer_indexerpb_indexer_service_proto_rawDescGZIP(), []int{6}
}

func (x *ChainInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChainInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChainInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ChainInfo) GetRpcUrl() string {
	if x != nil {
		return x.RpcUrl
	}
	return ""
}

func (x *ChainInfo) GetProposals() []*GovernanceProposal {
	if x != nil {
		return x.Proposals
	}
	return nil
}

type GetGovernanceProposalStatiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chains []*ChainInfo `protobuf:"bytes,1,rep,name=chains,proto3" json:"chains,omitempty"`
}

func (x *GetGovernanceProposalStatiResponse) Reset() {
	*x = GetGovernanceProposalStatiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGovernanceProposalStatiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGovernanceProposalStatiResponse) ProtoMessage() {}

func (x *GetGovernanceProposalStatiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGovernanceProposalStatiResponse.ProtoReflect.Descriptor instead.
func (*GetGovernanceProposalStatiResponse) Descriptor() ([]byte, []int) {
	return file_grpc_indexer_indexerpb_indexer_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetGovernanceProposalStatiResponse) GetChains() []*ChainInfo {
	if x != nil {
		return x.Chains
	}
	return nil
}

var File_grpc_indexer_indexerpb_indexer_service_proto protoreflect.FileDescriptor

var file_grpc_indexer_indexerpb_indexer_service_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x70, 0x62, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x73, 0x74, 0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x02, 0x0a, 0x0d, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x70, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x70, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x13, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x75, 0x6e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x75, 0x6e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61,
	0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x22, 0x52,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x06, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x73, 0x22, 0x54, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x24, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x54, 0x78, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x74, 0x78, 0x73, 0x22, 0xf4,
	0x01, 0x0a, 0x11, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x78, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x36, 0x0a,
	0x17, 0x75, 0x6e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15,
	0x75, 0x6e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x73, 0x0a, 0x12, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x09, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x70, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x70, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x22, 0x57, 0x0a, 0x22, 0x47,
	0x65, 0x74, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x73, 0x32, 0xb5, 0x02, 0x0a, 0x0e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e,
	0x67, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x2b, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x6a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x32, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x76, 0x65, 0x72,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x66, 0x0a, 0x10,
	0x54, 0x78, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x52, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x78, 0x73, 0x12, 0x20, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x78, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x78, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0xbb, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x42, 0x13, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c,
	0x6f, 0x6f, 0x6d, 0x69, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x2d, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x72, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x53, 0x47,
	0x58, 0xaa, 0x02, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x47, 0x72,
	0x70, 0x63, 0xca, 0x02, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5c, 0x47,
	0x72, 0x70, 0x63, 0xe2, 0x02, 0x1a, 0x53, 0x74, 0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x5c,
	0x47, 0x72, 0x70, 0x63, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x3a, 0x3a, 0x47, 0x72,
	0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_indexer_indexerpb_indexer_service_proto_rawDescOnce sync.Once
	file_grpc_indexer_indexerpb_indexer_service_proto_rawDescData = file_grpc_indexer_indexerpb_indexer_service_proto_rawDesc
)

func file_grpc_indexer_indexerpb_indexer_service_proto_rawDescGZIP() []byte {
	file_grpc_indexer_indexerpb_indexer_service_proto_rawDescOnce.Do(func() {
		file_grpc_indexer_indexerpb_indexer_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_indexer_indexerpb_indexer_service_proto_rawDescData)
	})
	return file_grpc_indexer_indexerpb_indexer_service_proto_rawDescData
}

var file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_grpc_indexer_indexerpb_indexer_service_proto_goTypes = []interface{}{
	(*IndexingChain)(nil),                      // 0: starscope.grpc.IndexingChain
	(*GetIndexingChainsResponse)(nil),          // 1: starscope.grpc.GetIndexingChainsResponse
	(*UpdateIndexingChainsRequest)(nil),        // 2: starscope.grpc.UpdateIndexingChainsRequest
	(*HandleTxsRequest)(nil),                   // 3: starscope.grpc.HandleTxsRequest
	(*HandleTxsResponse)(nil),                  // 4: starscope.grpc.HandleTxsResponse
	(*GovernanceProposal)(nil),                 // 5: starscope.grpc.GovernanceProposal
	(*ChainInfo)(nil),                          // 6: starscope.grpc.ChainInfo
	(*GetGovernanceProposalStatiResponse)(nil), // 7: starscope.grpc.GetGovernanceProposalStatiResponse
	(queryevent.ProposalStatus)(0),             // 8: starscope.queryevent.ProposalStatus
	(*emptypb.Empty)(nil),                      // 9: google.protobuf.Empty
}
var file_grpc_indexer_indexerpb_indexer_service_proto_depIdxs = []int32{
	0, // 0: starscope.grpc.GetIndexingChainsResponse.chains:type_name -> starscope.grpc.IndexingChain
	0, // 1: starscope.grpc.UpdateIndexingChainsRequest.chains:type_name -> starscope.grpc.IndexingChain
	8, // 2: starscope.grpc.GovernanceProposal.status:type_name -> starscope.queryevent.ProposalStatus
	5, // 3: starscope.grpc.ChainInfo.proposals:type_name -> starscope.grpc.GovernanceProposal
	6, // 4: starscope.grpc.GetGovernanceProposalStatiResponse.chains:type_name -> starscope.grpc.ChainInfo
	9, // 5: starscope.grpc.IndexerService.GetIndexingChains:input_type -> google.protobuf.Empty
	2, // 6: starscope.grpc.IndexerService.UpdateIndexingChains:input_type -> starscope.grpc.UpdateIndexingChainsRequest
	9, // 7: starscope.grpc.IndexerService.GetGovernanceProposalStati:input_type -> google.protobuf.Empty
	3, // 8: starscope.grpc.TxHandlerService.HandleTxs:input_type -> starscope.grpc.HandleTxsRequest
	1, // 9: starscope.grpc.IndexerService.GetIndexingChains:output_type -> starscope.grpc.GetIndexingChainsResponse
	9, // 10: starscope.grpc.IndexerService.UpdateIndexingChains:output_type -> google.protobuf.Empty
	7, // 11: starscope.grpc.IndexerService.GetGovernanceProposalStati:output_type -> starscope.grpc.GetGovernanceProposalStatiResponse
	4, // 12: starscope.grpc.TxHandlerService.HandleTxs:output_type -> starscope.grpc.HandleTxsResponse
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_grpc_indexer_indexerpb_indexer_service_proto_init() }
func file_grpc_indexer_indexerpb_indexer_service_proto_init() {
	if File_grpc_indexer_indexerpb_indexer_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexingChain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIndexingChainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIndexingChainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleTxsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleTxsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GovernanceProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGovernanceProposalStatiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_indexer_indexerpb_indexer_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_grpc_indexer_indexerpb_indexer_service_proto_goTypes,
		DependencyIndexes: file_grpc_indexer_indexerpb_indexer_service_proto_depIdxs,
		MessageInfos:      file_grpc_indexer_indexerpb_indexer_service_proto_msgTypes,
	}.Build()
	File_grpc_indexer_indexerpb_indexer_service_proto = out.File
	file_grpc_indexer_indexerpb_indexer_service_proto_rawDesc = nil
	file_grpc_indexer_indexerpb_indexer_service_proto_goTypes = nil
	file_grpc_indexer_indexerpb_indexer_service_proto_depIdxs = nil
}
