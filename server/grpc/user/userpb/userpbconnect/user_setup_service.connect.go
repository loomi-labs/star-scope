// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: grpc/user/userpb/user_setup_service.proto

package userpbconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	userpb "github.com/loomi-labs/star-scope/grpc/user/userpb"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// UserSetupServiceName is the fully-qualified name of the UserSetupService service.
	UserSetupServiceName = "starscope.grpc.UserSetupService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// UserSetupServiceGetStepProcedure is the fully-qualified name of the UserSetupService's GetStep
	// RPC.
	UserSetupServiceGetStepProcedure = "/starscope.grpc.UserSetupService/GetStep"
	// UserSetupServiceFinishStepProcedure is the fully-qualified name of the UserSetupService's
	// FinishStep RPC.
	UserSetupServiceFinishStepProcedure = "/starscope.grpc.UserSetupService/FinishStep"
	// UserSetupServiceValidateWalletProcedure is the fully-qualified name of the UserSetupService's
	// ValidateWallet RPC.
	UserSetupServiceValidateWalletProcedure = "/starscope.grpc.UserSetupService/ValidateWallet"
	// UserSetupServiceSearchWalletsProcedure is the fully-qualified name of the UserSetupService's
	// SearchWallets RPC.
	UserSetupServiceSearchWalletsProcedure = "/starscope.grpc.UserSetupService/SearchWallets"
)

// UserSetupServiceClient is a client for the starscope.grpc.UserSetupService service.
type UserSetupServiceClient interface {
	GetStep(context.Context, *connect_go.Request[userpb.GetStepRequest]) (*connect_go.Response[userpb.StepResponse], error)
	FinishStep(context.Context, *connect_go.Request[userpb.FinishStepRequest]) (*connect_go.Response[userpb.StepResponse], error)
	ValidateWallet(context.Context, *connect_go.Request[userpb.ValidateWalletRequest]) (*connect_go.Response[userpb.ValidateWalletResponse], error)
	SearchWallets(context.Context, *connect_go.Request[userpb.SearchWalletsRequest]) (*connect_go.ServerStreamForClient[userpb.SearchWalletsResponse], error)
}

// NewUserSetupServiceClient constructs a client for the starscope.grpc.UserSetupService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewUserSetupServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) UserSetupServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &userSetupServiceClient{
		getStep: connect_go.NewClient[userpb.GetStepRequest, userpb.StepResponse](
			httpClient,
			baseURL+UserSetupServiceGetStepProcedure,
			opts...,
		),
		finishStep: connect_go.NewClient[userpb.FinishStepRequest, userpb.StepResponse](
			httpClient,
			baseURL+UserSetupServiceFinishStepProcedure,
			opts...,
		),
		validateWallet: connect_go.NewClient[userpb.ValidateWalletRequest, userpb.ValidateWalletResponse](
			httpClient,
			baseURL+UserSetupServiceValidateWalletProcedure,
			opts...,
		),
		searchWallets: connect_go.NewClient[userpb.SearchWalletsRequest, userpb.SearchWalletsResponse](
			httpClient,
			baseURL+UserSetupServiceSearchWalletsProcedure,
			opts...,
		),
	}
}

// userSetupServiceClient implements UserSetupServiceClient.
type userSetupServiceClient struct {
	getStep        *connect_go.Client[userpb.GetStepRequest, userpb.StepResponse]
	finishStep     *connect_go.Client[userpb.FinishStepRequest, userpb.StepResponse]
	validateWallet *connect_go.Client[userpb.ValidateWalletRequest, userpb.ValidateWalletResponse]
	searchWallets  *connect_go.Client[userpb.SearchWalletsRequest, userpb.SearchWalletsResponse]
}

// GetStep calls starscope.grpc.UserSetupService.GetStep.
func (c *userSetupServiceClient) GetStep(ctx context.Context, req *connect_go.Request[userpb.GetStepRequest]) (*connect_go.Response[userpb.StepResponse], error) {
	return c.getStep.CallUnary(ctx, req)
}

// FinishStep calls starscope.grpc.UserSetupService.FinishStep.
func (c *userSetupServiceClient) FinishStep(ctx context.Context, req *connect_go.Request[userpb.FinishStepRequest]) (*connect_go.Response[userpb.StepResponse], error) {
	return c.finishStep.CallUnary(ctx, req)
}

// ValidateWallet calls starscope.grpc.UserSetupService.ValidateWallet.
func (c *userSetupServiceClient) ValidateWallet(ctx context.Context, req *connect_go.Request[userpb.ValidateWalletRequest]) (*connect_go.Response[userpb.ValidateWalletResponse], error) {
	return c.validateWallet.CallUnary(ctx, req)
}

// SearchWallets calls starscope.grpc.UserSetupService.SearchWallets.
func (c *userSetupServiceClient) SearchWallets(ctx context.Context, req *connect_go.Request[userpb.SearchWalletsRequest]) (*connect_go.ServerStreamForClient[userpb.SearchWalletsResponse], error) {
	return c.searchWallets.CallServerStream(ctx, req)
}

// UserSetupServiceHandler is an implementation of the starscope.grpc.UserSetupService service.
type UserSetupServiceHandler interface {
	GetStep(context.Context, *connect_go.Request[userpb.GetStepRequest]) (*connect_go.Response[userpb.StepResponse], error)
	FinishStep(context.Context, *connect_go.Request[userpb.FinishStepRequest]) (*connect_go.Response[userpb.StepResponse], error)
	ValidateWallet(context.Context, *connect_go.Request[userpb.ValidateWalletRequest]) (*connect_go.Response[userpb.ValidateWalletResponse], error)
	SearchWallets(context.Context, *connect_go.Request[userpb.SearchWalletsRequest], *connect_go.ServerStream[userpb.SearchWalletsResponse]) error
}

// NewUserSetupServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewUserSetupServiceHandler(svc UserSetupServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	userSetupServiceGetStepHandler := connect_go.NewUnaryHandler(
		UserSetupServiceGetStepProcedure,
		svc.GetStep,
		opts...,
	)
	userSetupServiceFinishStepHandler := connect_go.NewUnaryHandler(
		UserSetupServiceFinishStepProcedure,
		svc.FinishStep,
		opts...,
	)
	userSetupServiceValidateWalletHandler := connect_go.NewUnaryHandler(
		UserSetupServiceValidateWalletProcedure,
		svc.ValidateWallet,
		opts...,
	)
	userSetupServiceSearchWalletsHandler := connect_go.NewServerStreamHandler(
		UserSetupServiceSearchWalletsProcedure,
		svc.SearchWallets,
		opts...,
	)
	return "/starscope.grpc.UserSetupService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case UserSetupServiceGetStepProcedure:
			userSetupServiceGetStepHandler.ServeHTTP(w, r)
		case UserSetupServiceFinishStepProcedure:
			userSetupServiceFinishStepHandler.ServeHTTP(w, r)
		case UserSetupServiceValidateWalletProcedure:
			userSetupServiceValidateWalletHandler.ServeHTTP(w, r)
		case UserSetupServiceSearchWalletsProcedure:
			userSetupServiceSearchWalletsHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedUserSetupServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedUserSetupServiceHandler struct{}

func (UnimplementedUserSetupServiceHandler) GetStep(context.Context, *connect_go.Request[userpb.GetStepRequest]) (*connect_go.Response[userpb.StepResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.UserSetupService.GetStep is not implemented"))
}

func (UnimplementedUserSetupServiceHandler) FinishStep(context.Context, *connect_go.Request[userpb.FinishStepRequest]) (*connect_go.Response[userpb.StepResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.UserSetupService.FinishStep is not implemented"))
}

func (UnimplementedUserSetupServiceHandler) ValidateWallet(context.Context, *connect_go.Request[userpb.ValidateWalletRequest]) (*connect_go.Response[userpb.ValidateWalletResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.UserSetupService.ValidateWallet is not implemented"))
}

func (UnimplementedUserSetupServiceHandler) SearchWallets(context.Context, *connect_go.Request[userpb.SearchWalletsRequest], *connect_go.ServerStream[userpb.SearchWalletsResponse]) error {
	return connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.UserSetupService.SearchWallets is not implemented"))
}
