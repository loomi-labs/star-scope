// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: grpc/settings/settingspb/settings_service.proto

package settingspbconnect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	settingspb "github.com/loomi-labs/star-scope/grpc/settings/settingspb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// SettingsServiceName is the fully-qualified name of the SettingsService service.
	SettingsServiceName = "starscope.grpc.settings.SettingsService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// SettingsServiceGetWalletsProcedure is the fully-qualified name of the SettingsService's
	// GetWallets RPC.
	SettingsServiceGetWalletsProcedure = "/starscope.grpc.settings.SettingsService/GetWallets"
	// SettingsServiceAddWalletProcedure is the fully-qualified name of the SettingsService's AddWallet
	// RPC.
	SettingsServiceAddWalletProcedure = "/starscope.grpc.settings.SettingsService/AddWallet"
	// SettingsServiceUpdateWalletProcedure is the fully-qualified name of the SettingsService's
	// UpdateWallet RPC.
	SettingsServiceUpdateWalletProcedure = "/starscope.grpc.settings.SettingsService/UpdateWallet"
	// SettingsServiceRemoveWalletProcedure is the fully-qualified name of the SettingsService's
	// RemoveWallet RPC.
	SettingsServiceRemoveWalletProcedure = "/starscope.grpc.settings.SettingsService/RemoveWallet"
	// SettingsServiceValidateWalletProcedure is the fully-qualified name of the SettingsService's
	// ValidateWallet RPC.
	SettingsServiceValidateWalletProcedure = "/starscope.grpc.settings.SettingsService/ValidateWallet"
	// SettingsServiceGetChainsProcedure is the fully-qualified name of the SettingsService's GetChains
	// RPC.
	SettingsServiceGetChainsProcedure = "/starscope.grpc.settings.SettingsService/GetChains"
	// SettingsServiceAddChainProcedure is the fully-qualified name of the SettingsService's AddChain
	// RPC.
	SettingsServiceAddChainProcedure = "/starscope.grpc.settings.SettingsService/AddChain"
	// SettingsServiceUpdateChainProcedure is the fully-qualified name of the SettingsService's
	// UpdateChain RPC.
	SettingsServiceUpdateChainProcedure = "/starscope.grpc.settings.SettingsService/UpdateChain"
	// SettingsServiceRemoveChainProcedure is the fully-qualified name of the SettingsService's
	// RemoveChain RPC.
	SettingsServiceRemoveChainProcedure = "/starscope.grpc.settings.SettingsService/RemoveChain"
	// SettingsServiceGetAvailableChainsProcedure is the fully-qualified name of the SettingsService's
	// GetAvailableChains RPC.
	SettingsServiceGetAvailableChainsProcedure = "/starscope.grpc.settings.SettingsService/GetAvailableChains"
)

// SettingsServiceClient is a client for the starscope.grpc.settings.SettingsService service.
type SettingsServiceClient interface {
	GetWallets(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.Response[settingspb.GetWalletsResponse], error)
	AddWallet(context.Context, *connect_go.Request[settingspb.UpdateWalletRequest]) (*connect_go.Response[emptypb.Empty], error)
	UpdateWallet(context.Context, *connect_go.Request[settingspb.UpdateWalletRequest]) (*connect_go.Response[emptypb.Empty], error)
	RemoveWallet(context.Context, *connect_go.Request[settingspb.RemoveWalletRequest]) (*connect_go.Response[emptypb.Empty], error)
	ValidateWallet(context.Context, *connect_go.Request[settingspb.ValidateWalletRequest]) (*connect_go.Response[settingspb.ValidateWalletResponse], error)
	GetChains(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.Response[settingspb.GetChainsResponse], error)
	AddChain(context.Context, *connect_go.Request[settingspb.UpdateChainRequest]) (*connect_go.Response[emptypb.Empty], error)
	UpdateChain(context.Context, *connect_go.Request[settingspb.UpdateChainRequest]) (*connect_go.Response[emptypb.Empty], error)
	RemoveChain(context.Context, *connect_go.Request[settingspb.RemoveChainRequest]) (*connect_go.Response[emptypb.Empty], error)
	GetAvailableChains(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.Response[settingspb.GetAvailableChainsResponse], error)
}

// NewSettingsServiceClient constructs a client for the starscope.grpc.settings.SettingsService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewSettingsServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) SettingsServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &settingsServiceClient{
		getWallets: connect_go.NewClient[emptypb.Empty, settingspb.GetWalletsResponse](
			httpClient,
			baseURL+SettingsServiceGetWalletsProcedure,
			opts...,
		),
		addWallet: connect_go.NewClient[settingspb.UpdateWalletRequest, emptypb.Empty](
			httpClient,
			baseURL+SettingsServiceAddWalletProcedure,
			opts...,
		),
		updateWallet: connect_go.NewClient[settingspb.UpdateWalletRequest, emptypb.Empty](
			httpClient,
			baseURL+SettingsServiceUpdateWalletProcedure,
			opts...,
		),
		removeWallet: connect_go.NewClient[settingspb.RemoveWalletRequest, emptypb.Empty](
			httpClient,
			baseURL+SettingsServiceRemoveWalletProcedure,
			opts...,
		),
		validateWallet: connect_go.NewClient[settingspb.ValidateWalletRequest, settingspb.ValidateWalletResponse](
			httpClient,
			baseURL+SettingsServiceValidateWalletProcedure,
			opts...,
		),
		getChains: connect_go.NewClient[emptypb.Empty, settingspb.GetChainsResponse](
			httpClient,
			baseURL+SettingsServiceGetChainsProcedure,
			opts...,
		),
		addChain: connect_go.NewClient[settingspb.UpdateChainRequest, emptypb.Empty](
			httpClient,
			baseURL+SettingsServiceAddChainProcedure,
			opts...,
		),
		updateChain: connect_go.NewClient[settingspb.UpdateChainRequest, emptypb.Empty](
			httpClient,
			baseURL+SettingsServiceUpdateChainProcedure,
			opts...,
		),
		removeChain: connect_go.NewClient[settingspb.RemoveChainRequest, emptypb.Empty](
			httpClient,
			baseURL+SettingsServiceRemoveChainProcedure,
			opts...,
		),
		getAvailableChains: connect_go.NewClient[emptypb.Empty, settingspb.GetAvailableChainsResponse](
			httpClient,
			baseURL+SettingsServiceGetAvailableChainsProcedure,
			opts...,
		),
	}
}

// settingsServiceClient implements SettingsServiceClient.
type settingsServiceClient struct {
	getWallets         *connect_go.Client[emptypb.Empty, settingspb.GetWalletsResponse]
	addWallet          *connect_go.Client[settingspb.UpdateWalletRequest, emptypb.Empty]
	updateWallet       *connect_go.Client[settingspb.UpdateWalletRequest, emptypb.Empty]
	removeWallet       *connect_go.Client[settingspb.RemoveWalletRequest, emptypb.Empty]
	validateWallet     *connect_go.Client[settingspb.ValidateWalletRequest, settingspb.ValidateWalletResponse]
	getChains          *connect_go.Client[emptypb.Empty, settingspb.GetChainsResponse]
	addChain           *connect_go.Client[settingspb.UpdateChainRequest, emptypb.Empty]
	updateChain        *connect_go.Client[settingspb.UpdateChainRequest, emptypb.Empty]
	removeChain        *connect_go.Client[settingspb.RemoveChainRequest, emptypb.Empty]
	getAvailableChains *connect_go.Client[emptypb.Empty, settingspb.GetAvailableChainsResponse]
}

// GetWallets calls starscope.grpc.settings.SettingsService.GetWallets.
func (c *settingsServiceClient) GetWallets(ctx context.Context, req *connect_go.Request[emptypb.Empty]) (*connect_go.Response[settingspb.GetWalletsResponse], error) {
	return c.getWallets.CallUnary(ctx, req)
}

// AddWallet calls starscope.grpc.settings.SettingsService.AddWallet.
func (c *settingsServiceClient) AddWallet(ctx context.Context, req *connect_go.Request[settingspb.UpdateWalletRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return c.addWallet.CallUnary(ctx, req)
}

// UpdateWallet calls starscope.grpc.settings.SettingsService.UpdateWallet.
func (c *settingsServiceClient) UpdateWallet(ctx context.Context, req *connect_go.Request[settingspb.UpdateWalletRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return c.updateWallet.CallUnary(ctx, req)
}

// RemoveWallet calls starscope.grpc.settings.SettingsService.RemoveWallet.
func (c *settingsServiceClient) RemoveWallet(ctx context.Context, req *connect_go.Request[settingspb.RemoveWalletRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return c.removeWallet.CallUnary(ctx, req)
}

// ValidateWallet calls starscope.grpc.settings.SettingsService.ValidateWallet.
func (c *settingsServiceClient) ValidateWallet(ctx context.Context, req *connect_go.Request[settingspb.ValidateWalletRequest]) (*connect_go.Response[settingspb.ValidateWalletResponse], error) {
	return c.validateWallet.CallUnary(ctx, req)
}

// GetChains calls starscope.grpc.settings.SettingsService.GetChains.
func (c *settingsServiceClient) GetChains(ctx context.Context, req *connect_go.Request[emptypb.Empty]) (*connect_go.Response[settingspb.GetChainsResponse], error) {
	return c.getChains.CallUnary(ctx, req)
}

// AddChain calls starscope.grpc.settings.SettingsService.AddChain.
func (c *settingsServiceClient) AddChain(ctx context.Context, req *connect_go.Request[settingspb.UpdateChainRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return c.addChain.CallUnary(ctx, req)
}

// UpdateChain calls starscope.grpc.settings.SettingsService.UpdateChain.
func (c *settingsServiceClient) UpdateChain(ctx context.Context, req *connect_go.Request[settingspb.UpdateChainRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return c.updateChain.CallUnary(ctx, req)
}

// RemoveChain calls starscope.grpc.settings.SettingsService.RemoveChain.
func (c *settingsServiceClient) RemoveChain(ctx context.Context, req *connect_go.Request[settingspb.RemoveChainRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return c.removeChain.CallUnary(ctx, req)
}

// GetAvailableChains calls starscope.grpc.settings.SettingsService.GetAvailableChains.
func (c *settingsServiceClient) GetAvailableChains(ctx context.Context, req *connect_go.Request[emptypb.Empty]) (*connect_go.Response[settingspb.GetAvailableChainsResponse], error) {
	return c.getAvailableChains.CallUnary(ctx, req)
}

// SettingsServiceHandler is an implementation of the starscope.grpc.settings.SettingsService
// service.
type SettingsServiceHandler interface {
	GetWallets(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.Response[settingspb.GetWalletsResponse], error)
	AddWallet(context.Context, *connect_go.Request[settingspb.UpdateWalletRequest]) (*connect_go.Response[emptypb.Empty], error)
	UpdateWallet(context.Context, *connect_go.Request[settingspb.UpdateWalletRequest]) (*connect_go.Response[emptypb.Empty], error)
	RemoveWallet(context.Context, *connect_go.Request[settingspb.RemoveWalletRequest]) (*connect_go.Response[emptypb.Empty], error)
	ValidateWallet(context.Context, *connect_go.Request[settingspb.ValidateWalletRequest]) (*connect_go.Response[settingspb.ValidateWalletResponse], error)
	GetChains(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.Response[settingspb.GetChainsResponse], error)
	AddChain(context.Context, *connect_go.Request[settingspb.UpdateChainRequest]) (*connect_go.Response[emptypb.Empty], error)
	UpdateChain(context.Context, *connect_go.Request[settingspb.UpdateChainRequest]) (*connect_go.Response[emptypb.Empty], error)
	RemoveChain(context.Context, *connect_go.Request[settingspb.RemoveChainRequest]) (*connect_go.Response[emptypb.Empty], error)
	GetAvailableChains(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.Response[settingspb.GetAvailableChainsResponse], error)
}

// NewSettingsServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewSettingsServiceHandler(svc SettingsServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	settingsServiceGetWalletsHandler := connect_go.NewUnaryHandler(
		SettingsServiceGetWalletsProcedure,
		svc.GetWallets,
		opts...,
	)
	settingsServiceAddWalletHandler := connect_go.NewUnaryHandler(
		SettingsServiceAddWalletProcedure,
		svc.AddWallet,
		opts...,
	)
	settingsServiceUpdateWalletHandler := connect_go.NewUnaryHandler(
		SettingsServiceUpdateWalletProcedure,
		svc.UpdateWallet,
		opts...,
	)
	settingsServiceRemoveWalletHandler := connect_go.NewUnaryHandler(
		SettingsServiceRemoveWalletProcedure,
		svc.RemoveWallet,
		opts...,
	)
	settingsServiceValidateWalletHandler := connect_go.NewUnaryHandler(
		SettingsServiceValidateWalletProcedure,
		svc.ValidateWallet,
		opts...,
	)
	settingsServiceGetChainsHandler := connect_go.NewUnaryHandler(
		SettingsServiceGetChainsProcedure,
		svc.GetChains,
		opts...,
	)
	settingsServiceAddChainHandler := connect_go.NewUnaryHandler(
		SettingsServiceAddChainProcedure,
		svc.AddChain,
		opts...,
	)
	settingsServiceUpdateChainHandler := connect_go.NewUnaryHandler(
		SettingsServiceUpdateChainProcedure,
		svc.UpdateChain,
		opts...,
	)
	settingsServiceRemoveChainHandler := connect_go.NewUnaryHandler(
		SettingsServiceRemoveChainProcedure,
		svc.RemoveChain,
		opts...,
	)
	settingsServiceGetAvailableChainsHandler := connect_go.NewUnaryHandler(
		SettingsServiceGetAvailableChainsProcedure,
		svc.GetAvailableChains,
		opts...,
	)
	return "/starscope.grpc.settings.SettingsService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case SettingsServiceGetWalletsProcedure:
			settingsServiceGetWalletsHandler.ServeHTTP(w, r)
		case SettingsServiceAddWalletProcedure:
			settingsServiceAddWalletHandler.ServeHTTP(w, r)
		case SettingsServiceUpdateWalletProcedure:
			settingsServiceUpdateWalletHandler.ServeHTTP(w, r)
		case SettingsServiceRemoveWalletProcedure:
			settingsServiceRemoveWalletHandler.ServeHTTP(w, r)
		case SettingsServiceValidateWalletProcedure:
			settingsServiceValidateWalletHandler.ServeHTTP(w, r)
		case SettingsServiceGetChainsProcedure:
			settingsServiceGetChainsHandler.ServeHTTP(w, r)
		case SettingsServiceAddChainProcedure:
			settingsServiceAddChainHandler.ServeHTTP(w, r)
		case SettingsServiceUpdateChainProcedure:
			settingsServiceUpdateChainHandler.ServeHTTP(w, r)
		case SettingsServiceRemoveChainProcedure:
			settingsServiceRemoveChainHandler.ServeHTTP(w, r)
		case SettingsServiceGetAvailableChainsProcedure:
			settingsServiceGetAvailableChainsHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedSettingsServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedSettingsServiceHandler struct{}

func (UnimplementedSettingsServiceHandler) GetWallets(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.Response[settingspb.GetWalletsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.settings.SettingsService.GetWallets is not implemented"))
}

func (UnimplementedSettingsServiceHandler) AddWallet(context.Context, *connect_go.Request[settingspb.UpdateWalletRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.settings.SettingsService.AddWallet is not implemented"))
}

func (UnimplementedSettingsServiceHandler) UpdateWallet(context.Context, *connect_go.Request[settingspb.UpdateWalletRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.settings.SettingsService.UpdateWallet is not implemented"))
}

func (UnimplementedSettingsServiceHandler) RemoveWallet(context.Context, *connect_go.Request[settingspb.RemoveWalletRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.settings.SettingsService.RemoveWallet is not implemented"))
}

func (UnimplementedSettingsServiceHandler) ValidateWallet(context.Context, *connect_go.Request[settingspb.ValidateWalletRequest]) (*connect_go.Response[settingspb.ValidateWalletResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.settings.SettingsService.ValidateWallet is not implemented"))
}

func (UnimplementedSettingsServiceHandler) GetChains(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.Response[settingspb.GetChainsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.settings.SettingsService.GetChains is not implemented"))
}

func (UnimplementedSettingsServiceHandler) AddChain(context.Context, *connect_go.Request[settingspb.UpdateChainRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.settings.SettingsService.AddChain is not implemented"))
}

func (UnimplementedSettingsServiceHandler) UpdateChain(context.Context, *connect_go.Request[settingspb.UpdateChainRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.settings.SettingsService.UpdateChain is not implemented"))
}

func (UnimplementedSettingsServiceHandler) RemoveChain(context.Context, *connect_go.Request[settingspb.RemoveChainRequest]) (*connect_go.Response[emptypb.Empty], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.settings.SettingsService.RemoveChain is not implemented"))
}

func (UnimplementedSettingsServiceHandler) GetAvailableChains(context.Context, *connect_go.Request[emptypb.Empty]) (*connect_go.Response[settingspb.GetAvailableChainsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("starscope.grpc.settings.SettingsService.GetAvailableChains is not implemented"))
}
