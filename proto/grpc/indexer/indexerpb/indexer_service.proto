syntax = "proto3";

import "google/protobuf/empty.proto";
import "event/chain_event.proto";
import "event/contract_event.proto";

package starscope.grpc;

option go_package = "github.com/loomi-labs/star-scope/grpc/indexer/indexerpb";

service IndexerService {
  rpc GetIndexingChains (google.protobuf.Empty) returns (GetIndexingChainsResponse) {}
  rpc UpdateIndexingChains (UpdateIndexingChainsRequest) returns (google.protobuf.Empty) {}
  rpc GetGovernanceProposalStati (GetGovernanceProposalStatiRequest) returns (GetGovernanceProposalStatiResponse) {}
  rpc GetNewAccounts (GetNewAccountsRequest) returns (GetNewAccountsResponse) {}
}

message IndexingChain {
  uint64 id = 1;
  string name = 2;
  string path = 3;
  string rest_endpoint = 4;
  uint64 indexing_height = 5;
  repeated string handled_message_types = 6;
  repeated string unhandled_message_types = 7;
  bool has_custom_indexer = 8;
}

message GetIndexingChainsResponse {
  repeated IndexingChain chains = 1;
}

message UpdateIndexingChainsRequest {
  repeated IndexingChain chains = 1;
}

service TxHandlerService {
  rpc HandleTxs (HandleTxsRequest) returns (HandleTxsResponse) {}
}

message HandleTxsRequest {
  repeated bytes txs = 1;
}

message HandleTxsResponse {
  repeated bytes proto_messages = 1;
  int32 count_skipped = 2;
  int32 count_processed = 3;
  repeated string handled_message_types = 4;
  repeated string unhandled_message_types = 5;
}

message GetGovernanceProposalStatiRequest {
  repeated string chain_paths = 1;
}

message GovernanceProposal {
  uint64 proposal_id = 1;
  starscope.event.ProposalStatus status = 2;
}

message ContractGovernanceProposal {
  uint64 proposal_id = 1;
  starscope.event.ContractProposalStatus status = 2;
  string contract_address = 3;
}

message GovernanceChainInfo {
  uint64 id = 1;
  string name = 2;
  string path = 3;
  string rest_endpoint = 4;
  repeated GovernanceProposal proposals = 5;
  repeated ContractGovernanceProposal contract_proposals = 6;
}

message GetGovernanceProposalStatiResponse {
  repeated GovernanceChainInfo chains = 1;
}

message GetNewAccountsRequest {
  repeated string chain_paths = 1;
}

message NewAccountsChainInfo {
  uint64 id = 1;
  string name = 2;
  string path = 3;
  string rest_endpoint = 4;
  repeated string new_accounts = 5;
}

message GetNewAccountsResponse {
  repeated NewAccountsChainInfo chains = 1;
}
